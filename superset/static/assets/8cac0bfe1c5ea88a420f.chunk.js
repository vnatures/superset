"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[321,5527],{50321:(t,e,s)=>{s.r(e),s.d(e,{default:()=>M});const r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];class i{static from(t){if(!(t instanceof ArrayBuffer))throw new Error("Data must be an instance of ArrayBuffer.");const[e,s]=new Uint8Array(t,0,2);if(219!==e)throw new Error("Data does not appear to be in a KDBush format.");const o=s>>4;if(1!==o)throw new Error(`Got v${o} data when expected v1.`);const n=r[15&s];if(!n)throw new Error("Unrecognized array type.");const[a]=new Uint16Array(t,2,1),[h]=new Uint32Array(t,4,1);return new i(h,a,n,t)}constructor(t,e=64,s=Float64Array,i){if(isNaN(t)||t<0)throw new Error(`Unpexpected numItems value: ${t}.`);this.numItems=+t,this.nodeSize=Math.min(Math.max(+e,2),65535),this.ArrayType=s,this.IndexArrayType=t<65536?Uint16Array:Uint32Array;const o=r.indexOf(this.ArrayType),n=2*t*this.ArrayType.BYTES_PER_ELEMENT,a=t*this.IndexArrayType.BYTES_PER_ELEMENT,h=(8-a%8)%8;if(o<0)throw new Error(`Unexpected typed array class: ${s}.`);i&&i instanceof ArrayBuffer?(this.data=i,this.ids=new this.IndexArrayType(this.data,8,t),this.coords=new this.ArrayType(this.data,8+a+h,2*t),this._pos=2*t,this._finished=!0):(this.data=new ArrayBuffer(8+n+a+h),this.ids=new this.IndexArrayType(this.data,8,t),this.coords=new this.ArrayType(this.data,8+a+h,2*t),this._pos=0,this._finished=!1,new Uint8Array(this.data,0,2).set([219,16+o]),new Uint16Array(this.data,2,1)[0]=e,new Uint32Array(this.data,4,1)[0]=t)}add(t,e){const s=this._pos>>1;return this.ids[s]=s,this.coords[this._pos++]=t,this.coords[this._pos++]=e,s}finish(){const t=this._pos>>1;if(t!==this.numItems)throw new Error(`Added ${t} items when expected ${this.numItems}.`);return o(this.ids,this.coords,this.nodeSize,0,this.numItems-1,0),this._finished=!0,this}range(t,e,s,r){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:i,coords:o,nodeSize:n}=this,a=[0,i.length-1,0],h=[];for(;a.length;){const u=a.pop()||0,d=a.pop()||0,c=a.pop()||0;if(d-c<=n){for(let n=c;n<=d;n++){const a=o[2*n],u=o[2*n+1];a>=t&&a<=s&&u>=e&&u<=r&&h.push(i[n])}continue}const p=c+d>>1,l=o[2*p],g=o[2*p+1];l>=t&&l<=s&&g>=e&&g<=r&&h.push(i[p]),(0===u?t<=l:e<=g)&&(a.push(c),a.push(p-1),a.push(1-u)),(0===u?s>=l:r>=g)&&(a.push(p+1),a.push(d),a.push(1-u))}return h}within(t,e,s){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:r,coords:i,nodeSize:o}=this,n=[0,r.length-1,0],a=[],h=s*s;for(;n.length;){const d=n.pop()||0,c=n.pop()||0,p=n.pop()||0;if(c-p<=o){for(let s=p;s<=c;s++)u(i[2*s],i[2*s+1],t,e)<=h&&a.push(r[s]);continue}const l=p+c>>1,g=i[2*l],m=i[2*l+1];u(g,m,t,e)<=h&&a.push(r[l]),(0===d?t-s<=g:e-s<=m)&&(n.push(p),n.push(l-1),n.push(1-d)),(0===d?t+s>=g:e+s>=m)&&(n.push(l+1),n.push(c),n.push(1-d))}return a}}function o(t,e,s,r,i,a){if(i-r<=s)return;const h=r+i>>1;n(t,e,h,r,i,a),o(t,e,s,r,h-1,1-a),o(t,e,s,h+1,i,1-a)}function n(t,e,s,r,i,o){for(;i>r;){if(i-r>600){const a=i-r+1,h=s-r+1,u=Math.log(a),d=.5*Math.exp(2*u/3),c=.5*Math.sqrt(u*d*(a-d)/a)*(h-a/2<0?-1:1);n(t,e,s,Math.max(r,Math.floor(s-h*d/a+c)),Math.min(i,Math.floor(s+(a-h)*d/a+c)),o)}const h=e[2*s+o];let u=r,d=i;for(a(t,e,r,s),e[2*i+o]>h&&a(t,e,r,i);u<d;){for(a(t,e,u,d),u++,d--;e[2*u+o]<h;)u++;for(;e[2*d+o]>h;)d--}e[2*r+o]===h?a(t,e,r,d):(d++,a(t,e,d,i)),d<=s&&(r=d+1),s<=d&&(i=d-1)}}function a(t,e,s,r){h(t,s,r),h(e,2*s,2*r),h(e,2*s+1,2*r+1)}function h(t,e,s){const r=t[e];t[e]=t[s],t[s]=r}function u(t,e,s,r){const i=t-s,o=e-r;return i*i+o*o}const d={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:t=>t},c=Math.fround||(p=new Float32Array(1),t=>(p[0]=+t,p[0]));var p;class l{constructor(t){this.options=Object.assign(Object.create(d),t),this.trees=new Array(this.options.maxZoom+1),this.stride=this.options.reduce?7:6,this.clusterProps=[]}load(t){const{log:e,minZoom:s,maxZoom:r}=this.options;e&&console.time("total time");const i=`prepare ${t.length} points`;e&&console.time(i),this.points=t;const o=[];for(let e=0;e<t.length;e++){const s=t[e];if(!s.geometry)continue;const[r,i]=s.geometry.coordinates,n=c(f(r)),a=c(w(i));o.push(n,a,1/0,e,-1,1),this.options.reduce&&o.push(0)}let n=this.trees[r+1]=this._createTree(o);e&&console.timeEnd(i);for(let t=r;t>=s;t--){const s=+Date.now();n=this.trees[t]=this._createTree(this._cluster(n,t)),e&&console.log("z%d: %d clusters in %dms",t,n.numItems,+Date.now()-s)}return e&&console.timeEnd("total time"),this}getClusters(t,e){let s=((t[0]+180)%360+360)%360-180;const r=Math.max(-90,Math.min(90,t[1]));let i=180===t[2]?180:((t[2]+180)%360+360)%360-180;const o=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)s=-180,i=180;else if(s>i){const t=this.getClusters([s,r,180,o],e),n=this.getClusters([-180,r,i,o],e);return t.concat(n)}const n=this.trees[this._limitZoom(e)],a=n.range(f(s),w(o),f(i),w(r)),h=n.data,u=[];for(const t of a){const e=this.stride*t;u.push(h[e+5]>1?g(h,e,this.clusterProps):this.points[h[e+3]])}return u}getChildren(t){const e=this._getOriginId(t),s=this._getOriginZoom(t),r="No cluster with the specified id.",i=this.trees[s];if(!i)throw new Error(r);const o=i.data;if(e*this.stride>=o.length)throw new Error(r);const n=this.options.radius/(this.options.extent*Math.pow(2,s-1)),a=o[e*this.stride],h=o[e*this.stride+1],u=i.within(a,h,n),d=[];for(const e of u){const s=e*this.stride;o[s+4]===t&&d.push(o[s+5]>1?g(o,s,this.clusterProps):this.points[o[s+3]])}if(0===d.length)throw new Error(r);return d}getLeaves(t,e,s){e=e||10,s=s||0;const r=[];return this._appendLeaves(r,t,e,s,0),r}getTile(t,e,s){const r=this.trees[this._limitZoom(t)],i=Math.pow(2,t),{extent:o,radius:n}=this.options,a=n/o,h=(s-a)/i,u=(s+1+a)/i,d={features:[]};return this._addTileFeatures(r.range((e-a)/i,h,(e+1+a)/i,u),r.data,e,s,i,d),0===e&&this._addTileFeatures(r.range(1-a/i,h,1,u),r.data,i,s,i,d),e===i-1&&this._addTileFeatures(r.range(0,h,a/i,u),r.data,-1,s,i,d),d.features.length?d:null}getClusterExpansionZoom(t){let e=this._getOriginZoom(t)-1;for(;e<=this.options.maxZoom;){const s=this.getChildren(t);if(e++,1!==s.length)break;t=s[0].properties.cluster_id}return e}_appendLeaves(t,e,s,r,i){const o=this.getChildren(e);for(const e of o){const o=e.properties;if(o&&o.cluster?i+o.point_count<=r?i+=o.point_count:i=this._appendLeaves(t,o.cluster_id,s,r,i):i<r?i++:t.push(e),t.length===s)break}return i}_createTree(t){const e=new i(t.length/this.stride|0,this.options.nodeSize,Float32Array);for(let s=0;s<t.length;s+=this.stride)e.add(t[s],t[s+1]);return e.finish(),e.data=t,e}_addTileFeatures(t,e,s,r,i,o){for(const n of t){const t=n*this.stride,a=e[t+5]>1;let h,u,d;if(a)h=m(e,t,this.clusterProps),u=e[t],d=e[t+1];else{const s=this.points[e[t+3]];h=s.properties;const[r,i]=s.geometry.coordinates;u=f(r),d=w(i)}const c={type:1,geometry:[[Math.round(this.options.extent*(u*i-s)),Math.round(this.options.extent*(d*i-r))]],tags:h};let p;p=a||this.options.generateId?e[t+3]:this.points[e[t+3]].id,void 0!==p&&(c.id=p),o.features.push(c)}}_limitZoom(t){return Math.max(this.options.minZoom,Math.min(Math.floor(+t),this.options.maxZoom+1))}_cluster(t,e){const{radius:s,extent:r,reduce:i,minPoints:o}=this.options,n=s/(r*Math.pow(2,e)),a=t.data,h=[],u=this.stride;for(let s=0;s<a.length;s+=u){if(a[s+2]<=e)continue;a[s+2]=e;const r=a[s],d=a[s+1],c=t.within(a[s],a[s+1],n),p=a[s+5];let l=p;for(const t of c){const s=t*u;a[s+2]>e&&(l+=a[s+5])}if(l>p&&l>=o){let t,o=r*p,n=d*p,g=-1;const m=(s/u<<5)+(e+1)+this.points.length;for(const r of c){const h=r*u;if(a[h+2]<=e)continue;a[h+2]=e;const d=a[h+5];o+=a[h]*d,n+=a[h+1]*d,a[h+4]=m,i&&(t||(t=this._map(a,s,!0),g=this.clusterProps.length,this.clusterProps.push(t)),i(t,this._map(a,h)))}a[s+4]=m,h.push(o/l,n/l,1/0,m,-1,l),i&&h.push(g)}else{for(let t=0;t<u;t++)h.push(a[s+t]);if(l>1)for(const t of c){const s=t*u;if(!(a[s+2]<=e)){a[s+2]=e;for(let t=0;t<u;t++)h.push(a[s+t])}}}}return h}_getOriginId(t){return t-this.points.length>>5}_getOriginZoom(t){return(t-this.points.length)%32}_map(t,e,s){if(t[e+5]>1){const r=this.clusterProps[t[e+6]];return s?Object.assign({},r):r}const r=this.points[t[e+3]].properties,i=this.options.map(r);return s&&i===r?Object.assign({},i):i}}function g(t,e,s){return{type:"Feature",id:t[e+3],properties:m(t,e,s),geometry:{type:"Point",coordinates:[(r=t[e],360*(r-.5)),y(t[e+1])]}};var r}function m(t,e,s){const r=t[e+5],i=r>=1e4?`${Math.round(r/1e3)}k`:r>=1e3?Math.round(r/100)/10+"k":r,o=t[e+6],n=-1===o?{}:Object.assign({},s[o]);return Object.assign(n,{cluster:!0,cluster_id:t[e+3],point_count:r,point_count_abbreviated:i})}function f(t){return t/360+.5}function w(t){const e=Math.sin(t*Math.PI/180),s=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return s<0?0:s>1?1:s}function y(t){const e=(180-360*t)*Math.PI/180;return 360*Math.atan(Math.exp(e))/Math.PI-90}var b=s(77908);const x=()=>{};function M(t){const{width:e,height:s,formData:r,hooks:i,queriesData:o}=t,{onError:n=x,setControlValue:a=x}=i,{bounds:h,geoJSON:u,hasCustomMetric:d,mapboxApiKey:c}=o[0].data,{clusteringRadius:p,globalOpacity:g,mapboxColor:m,mapboxStyle:f,pandasAggfunc:w,pointRadius:y,pointRadiusUnit:M,renderWhileDragging:_}=r,A=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/.exec(m);if(null===A)return n("Color field must be of form 'rgb(%d, %d, %d)'"),{};const T={maxZoom:b.DEFAULT_MAX_ZOOM,radius:p};d&&(T.initial=()=>({sum:0,squaredSum:0,min:1/0,max:-1/0}),T.map=t=>({sum:t.metric,squaredSum:t.metric**2,min:t.metric,max:t.metric}),T.reduce=(t,e)=>{t.sum+=e.sum,t.squaredSum+=e.squaredSum,t.min=Math.min(t.min,e.min),t.max=Math.max(t.max,e.max)});const C=new l(T);return C.load(u.features),{width:e,height:s,aggregatorName:w,bounds:h,clusterer:C,globalOpacity:g,hasCustomMetric:d,mapboxApiKey:c,mapStyle:f,onViewportChange({latitude:t,longitude:e,zoom:s}){a("viewport_longitude",e),a("viewport_latitude",t),a("viewport_zoom",s)},pointRadius:"Auto"===y?b.DEFAULT_POINT_RADIUS:y,pointRadiusUnit:M,renderWhileDragging:_,rgb:A}}},77908:(t,e,s)=>{s.r(e),s.d(e,{DEFAULT_MAX_ZOOM:()=>g,DEFAULT_POINT_RADIUS:()=>m,default:()=>b});var r=s(96540),i=s(5556),o=s.n(i),n=s(88813),a=s(55016);function h(t,e){let s,r=e;return s=e?Math.round(t*(r=10**r))/r:Math.round(t),s}function u(t,e,s){const r=e*(Math.PI/180);return h(t/(40075.16*Math.cos(r)/2**(s+9)),2)}var d=s(2445);const c={aggregation:o().string,compositeOperation:o().string,dotRadius:o().number,lngLatAccessor:o().func,locations:o().arrayOf(o().object).isRequired,pointRadiusUnit:o().string,renderWhileDragging:o().bool,rgb:o().arrayOf(o().oneOfType([o().string,o().number])),zoom:o().number};class p extends r.PureComponent{constructor(t){super(t),this.redraw=this.redraw.bind(this)}drawText(t,e,s={}){const{fontHeight:r=0,label:i="",radius:o=0,rgb:n=[0,0,0],shadow:a=!1}=s,h=1.8*o,u=.2126*n[1]+.7152*n[2]+.0722*n[3];t.globalCompositeOperation="source-over",t.fillStyle=u<=110?"white":"black",t.font=`${r}px sans-serif`,t.textAlign="center",t.textBaseline="middle",a&&(t.shadowBlur=15,t.shadowColor=u<=110?"black":"");const d=t.measureText(i).width;if(d>h){const e=r/d;t.font=e*h+"px sans-serif"}const{compositeOperation:c}=this.props;t.fillText(i,e[0],e[1]),t.globalCompositeOperation=c,t.shadowBlur=0,t.shadowColor=""}redraw({width:t,height:e,ctx:s,isDragging:r,project:i}){const{aggregation:o,compositeOperation:n,dotRadius:a,lngLatAccessor:d,locations:c,pointRadiusUnit:p,renderWhileDragging:l,rgb:g,zoom:m}=this.props,f=a,w=[];c.forEach(((t,e)=>{t.properties.cluster&&(w[e]=((t,e)=>{const s=t.point_count;if(!e)return s;if("sum"===e||"min"===e||"max"===e)return t[e];const{sum:r}=t,i=r/s;if("mean"===e)return Math.round(100*i)/100;const{squaredSum:o}=t,n=o/s-(r/s)**2;return"var"===e?Math.round(100*n)/100:"stdev"===e?Math.round(100*Math.sqrt(n))/100:s})(t.properties,o))}),this);const y=Math.max(...w.filter((t=>!Number.isNaN(t))));s.clearRect(0,0,t,e),s.globalCompositeOperation=n,!l&&r||!c||c.forEach((function(r,o){const n=i(d(r)),a=[h(n[0],1),h(n[1],1)];if(a[0]+f>=0&&a[0]-f<t&&a[1]+f>=0&&a[1]-f<e)if(s.beginPath(),r.properties.cluster){let t=w[o];const e=h((t/y)**.5*f,1),r=h(.5*e,1),[i,n]=a,u=s.createRadialGradient(i,n,e,i,n,0);u.addColorStop(1,`rgba(${g[1]}, ${g[2]}, ${g[3]}, 0.8)`),u.addColorStop(0,`rgba(${g[1]}, ${g[2]}, ${g[3]}, 0)`),s.arc(a[0],a[1],e,0,2*Math.PI),s.fillStyle=u,s.fill(),Number.isFinite(parseFloat(t))&&(t>=1e4?t=`${Math.round(t/1e3)}k`:t>=1e3&&(t=Math.round(t/100)/10+"k"),this.drawText(s,a,{fontHeight:r,label:t,radius:e,rgb:g,shadow:!0}))}else{const t=f/6,e=r.properties.radius,i=r.properties.metric;let o,n=null===e?t:e;if(null!==e){const t=d(r)[1];"Kilometers"===p?(o=`${h(n,2)}km`,n=u(n,t,m)):"Miles"===p&&(o=`${h(n,2)}mi`,n=u(1.60934*n,t,m))}null!==i&&(o=Number.isFinite(parseFloat(i))?h(i,2):i),n||(n=t),s.arc(a[0],a[1],h(n,1),0,2*Math.PI),s.fillStyle=`rgb(${g[1]}, ${g[2]}, ${g[3]})`,s.fill(),void 0!==o&&this.drawText(s,a,{fontHeight:h(n,1),label:o,radius:n,rgb:g,shadow:!1})}}),this)}render(){return(0,d.Y)(n.Zd,{redraw:this.redraw})}}p.propTypes=c,p.defaultProps={compositeOperation:"source-over",dotRadius:4,lngLatAccessor:t=>[t[0],t[1]],renderWhileDragging:!0};const l=p,g=16,m=60,f={width:o().number,height:o().number,aggregatorName:o().string,clusterer:o().object,globalOpacity:o().number,hasCustomMetric:o().bool,mapStyle:o().string,mapboxApiKey:o().string.isRequired,onViewportChange:o().func,pointRadius:o().number,pointRadiusUnit:o().string,renderWhileDragging:o().bool,rgb:o().array,bounds:o().array},w={width:400,height:400,globalOpacity:1,onViewportChange:()=>{},pointRadius:m,pointRadiusUnit:"Pixels"};class y extends r.Component{constructor(t){super(t);const{width:e,height:s,bounds:r}=this.props,i=new a.KH({width:e,height:s}).fitBounds(r),{latitude:o,longitude:n,zoom:h}=i;this.state={viewport:{longitude:n,latitude:o,zoom:h}},this.handleViewportChange=this.handleViewportChange.bind(this)}handleViewportChange(t){this.setState({viewport:t});const{onViewportChange:e}=this.props;e(t)}render(){const{width:t,height:e,aggregatorName:s,clusterer:r,globalOpacity:i,mapStyle:o,mapboxApiKey:a,pointRadius:h,pointRadiusUnit:u,renderWhileDragging:c,rgb:p,hasCustomMetric:g,bounds:m}=this.props,{viewport:f}=this.state,w=void 0!==f.isDragging&&f.isDragging,y=.5*t/100,b=.5*e/100,x=[m[0][0]-y,m[0][1]-b,m[1][0]+y,m[1][1]+b],M=r.getClusters(x,Math.round(f.zoom));return(0,d.Y)(n.Ay,{...f,mapStyle:o,width:t,height:e,mapboxApiAccessToken:a,onViewportChange:this.handleViewportChange,preserveDrawingBuffer:!0,children:(0,d.Y)(l,{...f,isDragging:w,locations:M,dotRadius:h,pointRadiusUnit:u,rgb:p,globalOpacity:i,compositeOperation:"screen",renderWhileDragging:c,aggregation:g?s:null,lngLatAccessor:t=>{const{coordinates:e}=t.geometry;return[e[0],e[1]]}})})}}y.propTypes=f,y.defaultProps=w;const b=y}}]);